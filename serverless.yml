service: s3-5min-autodelete
frameworkVersion: '>=3.0.0'

custom:
  bucket: mini-fb-downloader-faisal   # <-- set this to your existing bucket

provider:
  name: aws
  runtime: python3.11
  region: us-west-2               # <-- change if needed
  stage: prod
  environment:
    TARGET_BUCKET: ${self:custom.bucket}
    DELETER_FUNCTION_NAME: ${self:service}-${sls:stage}-deleteObject
    # Build the scheduler role ARN deterministically (created below in Resources)
    SCHEDULER_ROLE_ARN: arn:aws:iam::${aws:accountId}:role/${self:service}-${sls:stage}-scheduler-invoke

  iam:
    role:
      statements:
        # scheduleDeleter creates one-time schedules and may delete them
        - Effect: Allow
          Action:
            - scheduler:CreateSchedule
            - scheduler:DeleteSchedule
          Resource: "*"
        # scheduleDeleter must let EventBridge Scheduler assume/invoke with the role
        - Effect: Allow
          Action: iam:PassRole
          Resource: arn:aws:iam::${aws:accountId}:role/${self:service}-${sls:stage}-scheduler-invoke
        # deleteObject needs to delete from THIS bucket only
        - Effect: Allow
          Action: s3:DeleteObject
          Resource:
            - arn:aws:s3:::${self:custom.bucket}/*

functions:
  scheduleDeleter:
    handler: schedule_deleter.handler
    timeout: 15
    events:
      - s3:
          bucket: ${self:custom.bucket}
          event: s3:ObjectCreated:*
          existing: true

  deleteObject:
    # Name must match what we used in DELETER_FUNCTION_NAME above
    name: ${self:service}-${sls:stage}-deleteObject
    handler: delete_object.handler
    timeout: 15

resources:
  Resources:
    # Role that EventBridge Scheduler assumes to invoke deleteObject
    SchedulerInvokeRole:
      Type: AWS::IAM::Role
      Properties:
        RoleName: ${self:service}-${sls:stage}-scheduler-invoke
        AssumeRolePolicyDocument:
          Version: '2012-10-17'
          Statement:
            - Effect: Allow
              Principal:
                Service: scheduler.amazonaws.com
              Action: sts:AssumeRole
        Policies:
          - PolicyName: allow-invoke-delete-object
            PolicyDocument:
              Version: '2012-10-17'
              Statement:
                - Effect: Allow
                  Action: lambda:InvokeFunction
                  Resource:
                    # Exact function ARN
                    - { "Fn::GetAtt": ["DeleteObjectLambdaFunction", "Arn"] }
                    # And all versions/aliases of the same function (Arn:*)
                    - { "Fn::Join": ["", [ { "Fn::GetAtt": ["DeleteObjectLambdaFunction", "Arn"] }, ":*" ]] }

  Outputs:
    SchedulerInvokeRoleArn:
      Value: { "Fn::GetAtt": ["SchedulerInvokeRole", "Arn"] }
      Export:
        Name: ${self:service}-${sls:stage}-SchedulerInvokeRoleArn
